# GIT CONFIGURATION
# http://michaelwales.com/articles/make-gitconfig-work-for-you

# aliases - basic helpers
[alias]
# add and commit
ac = "!f() { git add .; git cm \"$@\"; }; f"

# add new remote
ar = "!f() { git remote add \"$0\" \"$1\"; }; f"

# git branch
b = "!f() { git branch $@; }; f"

# delete branch locally
bdel = "!f() { git b -d $@; }; f"

# delete branch remotely
bdelr = "!f() { git push origin --no-verify --delete $@; }; f"

# rename branch
bren = "!f() { git b -m $@; git puo $@; }; f"

# checkout branch
ch = "!f() { git checkout $@; }; f"

# checkout and push new branch to origin
chb = "!f() { git ch -b \"$@\"; git puo \"$@\"; }; f"

# checkout branch and pull latest version
chp = "!f() { git ch $@; git pull; }; f"

# commit with message
cm = "!f() { git commit -s -m \"$@\"; }; f"

# perform initial commit and push to branch main
launch = "!f() { git chore \"first commit\"; git b -m main; git rao $1; git puo main; }; f"

# create new local repo, perform initial commit, and push to branch main
launchwithinit = "!f() { git init; git chore \"first commit\"; git b -m main; git rao $1; git puo main; }; f"

# tell git to start tracking branch and push to origin
puo = "!f() { git push origin --no-verify -u $@; }; f"

# add new remote origin
rao = "!f() { git remote add origin $@; }; f"

# rebase branch
rb = "!f() { git rebase $@; }; f"

# remove local .git directory
restart = "!f() { rm -rf .git; echo \"removed .git directory.\"; }; f"

# undo last commit
ulc = "!f() { git reset head~1 --soft; }; f"

# aliases - branch naming conventions
[alias]
# create new bugfix (feature) branch and push upstream
chbb = "!f() { git chb feat/fix/$@; }; f"

# create new hotfix branch and push upstream
chbh = "!f() { git chb hotfix/$@; }; f"

# create new feature branch and push upstream
chbf = "!f() { git chb feat/$@; }; f"

# create new release branch and push upstream
chbr = "!f() { git chb release/$@; }; f"

# aliases - husky
[alias]
# force push commits without running `pre-push` hook
fpnv = "!f() { git pnv --force ; }; f"

# push commits without running `pre-push` hook
pnv = "!f() { git push --no-verify $@; }; f"

[branch]
autosetuprebase = always

[checkout]
defaultRemote = origin

[color]
ui = true

[commit]
gpgsign = true

[core]
autocrlf = false
ignorecase = false
safecrlf = false

[gitflow "prefix"]
feature = feat/
hotfix = hotfix/
release = release/
support = feat/fix/

[gpg]
program = gpg2

[init]
defaultBranch = main

[pull]
rebase = true

[rebase]
autoStash = true

[url "git@bitbucket.org:"]
insteadOf = bb:

[url "git@github.com:"]
insteadOf = gh:

[url "https://gist.github.com/"]
insteadOf = gist:
